version: '3.8'

services:

  mysql:
    env_file:
      - variables.env
    image: mysql:8
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "3306:3306"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "{DB_USER}", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 10s
      retries: 10
    volumes:
      - mysql_data:/var/lib/mysql

  service-registry:
    env_file:
      - variables.env
    image: service-registry
    container_name: service-registry
    ports:
      - "8761:8761"
    environment:
      SERVER_PORT: "8761"
      EUREKA_INSTANCE_HOSTNAME: service-registry
      EUREKA_CLIENT_REGISTER-WITH-EUREKA: "false"
      EUREKA_CLIENT_FETCH-REGISTRY: "false"
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  api-gateway:
    env_file:
      - variables.env
    image: api-gateway
    container_name: api-gateway
    ports:
      - "8078:8078"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_URL}
      SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_ENABLED: "true"
      SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_LOWERCASE_SERVICE_ID: "true"
    depends_on:
      - service-registry
    networks:
      - backend

  user-service:
    env_file:
      - variables.env
    image: user-service
    container_name: user-service
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_db:3306/user_service
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_URL}
      EUREKA_INSTANCE_PREFER-IP-ADDRESS: "false"
      EUREKA_INSTANCE_HOSTNAME: user-service
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
    depends_on:
      mysql:
        condition: service_healthy
      service-registry:
        condition: service_healthy
      api-gateway:
        condition: service_started
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 10s
    networks:
      - backend

  category-service:
    env_file:
      - variables.env
    image: category-service
    container_name: category-service
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_db:3306/category_service
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_URL}
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: "true"
      EUREKA_INSTANCE_HOSTNAME: category-service
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
    depends_on:
      mysql:
        condition: service_healthy
      service-registry:
        condition: service_healthy
      api-gateway:
        condition: service_started
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8082/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 10s
    networks:
      - backend


  authentication-service:
    env_file:
      - variables.env
    image: authentication-service
    container_name: authentication-service
    ports:
      - "8079:8079"
    environment:
      EUREKA_INSTANCE_HOSTNAME: authentication-service
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_URL}
      KEYCLOAK_AUTH_SERVER_URL: http://keycloak:8080
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      KEYCLOAK_RESOURCE: ${KEYCLOAK_CLIENT_ID}
      KEYCLOAK_CREDENTIALS_SECRET: ${KEYCLOAK_CLIENT_SECRET}
      KEYCLOAK_SSL_REQUIRED: external
      KEYCLOAK_PUBLIC_CLIENT: "false"
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
    depends_on:
      mysql:
        condition: service_healthy
      service-registry:
        condition: service_healthy
      api-gateway:
        condition: service_started
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8079/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 10s
    networks:
      - backend

  follows-service:
    env_file:
      - variables.env
    image: follows-service
    container_name: follows-service
    ports:
      - "8083:8083"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_db:3306/follows_service
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_URL}
      EUREKA_INSTANCE_PREFER-IP-ADDRESS: "false"
      EUREKA_INSTANCE_HOSTNAME: follows-service
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
    depends_on:
      mysql:
        condition: service_healthy
      service-registry:
        condition: service_healthy
      api-gateway:
        condition: service_started
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8083/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 10s
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  mysql_data:
